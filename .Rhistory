## 8 May 2016 sarunluitel
## Run a linear regression on a sample regression function.
##
# functions to format descriptive statistics
library(e1071)
setwd("C:\\Users\\sarun\\onedrive\\Documents\\R files\\R")
source("DescriptiveStatisticsRev4.R")
# function to format regression results
source("RegReportLibraryRev5.R")
##read data
mydata <- read.csv("sleep75.csv")
nbins=40
desc_stats_mat("total work",mydata$sleep)
desc_stats_mat("total work",mydata$yngkid)
hist(mydata$sleep, breaks = nbins, xlab =  "Sleep", main="")
hist(mydata$totwrk, breaks = nbins, xlab="totalwork", main="")
hist(mydata$educ, breaks = nbins, xlab="Education (Years)", main="")
hist(mydata$age, breaks = nbins, xlab="Age", main="")
myfit <- lm(sleep~totwrk+educ+age+agesq+yngkid, data=mydata) ##linear regressions
stataOutput.display(myfit)
desc_stats_mat("total work",mydata$sleep)
hist(mydata$sleep, breaks = nbins, xlab =  "Sleep", main="")
hist(mydata$totwrk, breaks = nbins, xlab="totalwork", main="")
hist(mydata$educ, breaks = nbins, xlab="Education (Years)", main="")
hist(mydata$age, breaks = nbins, xlab="Age", main="")
nbins=43
hist(mydata$age, breaks = nbins, xlab="Age", main="")
hist(mydata$age, breaks = nbins, xlab="Age", main="")
nbins=50
hist(mydata$age, breaks = nbins, xlab="Age", main="")
hist(mydata$age, breaks = nbins, xlab="Age", main="")
hist(mydata$age, breaks = 50, xlab="Age", main="")
hist(mydata$age, breaks = 500, xlab="Age", main="")
hist(mydata$age, breaks = 50, xlab="Age", main="")
hist(mydata$age, breaks = 5, xlab="Age", main="")
hist(mydata$age, breaks = 50, xlab="Age", main="")
hist(mydata$yngkid, breaks = 50, xlab="Age", main="")
mydata <- read.csv("sleep75.csv")
nbins=2
hist(mydata$yngkid, breaks = nbins, xlab="Age", main="")
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
nobs = 500; nbins = 20 # long version
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
nobs = 500; nbins = 20 # long version
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
nobs = 500; nbins = 20 # long version
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
nobs = 500; nbins = 20 # long version
nobs = 30; nbins = 14 # short version
norm
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 30; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 5000; nbins = 14 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 50000; nbins = 411 # short version
norm_scale = 10 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 50000; nbins = 411 # short version
norm_scale = 100 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500000; nbins = 4000 # short version
norm_scale = 100 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500000; nbins = 40000 # short version
norm_scale = 100 ; t_df = 26 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
## 14 Jan 2015 Terry A. Student
## Descriptive Statistics
##
library(e1071)
source("DescriptiveStatisticsRev4.R")
#### Set parameters
nobs = 500000; nbins = 40000 # short version
norm_scale = 100 ; t_df = 206 ; t_scale = 10
#### Generate normal random variable with noise distributed U(-0.5,0.5)
noisy_norm = norm_scale * rnorm(nobs) + runif(nobs) - 0.5
#### Generate t-distributed random variable with noise distributed U(-0.5,0.5)
noisy_t = t_scale * rt(nobs, t_df) + runif(nobs) - 0.5
#### Display descriptive statistics for both
disp_desc_stats("Noisy normal", noisy_norm)
disp_desc_stats("Noisy T", noisy_t)
#### Display histograms for both
split.screen(c(1,2))
screen(n = 1, new = TRUE)
hist(noisy_norm, breaks = nbins, xlab = "Noisy normal")
screen(n = 2, new = TRUE)
hist(noisy_t, breaks = nbins, xlab = "Noisy T")
close.screen(all.screens = TRUE)
